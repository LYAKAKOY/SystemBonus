services:

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile_backend
    volumes:
      - ./backend:/backend
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      DATABASE: database
      REDIS_DB: redis
      REDIS_USER: default
      REDIS_PASSWORD: password
      REDIS_PORT: 6379
    networks:
      - web_app_network
    ports:
      - '127.0.0.1:8000:8000'
    command: sh -c "uvicorn main:app --reload --host 0.0.0.0 --port 8000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    image: postgres:15-alpine3.18
    container_name: database
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - data_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '127.0.0.1:5432:5432'
    networks:
      - web_app_network
    restart: always

  redis:
    image: redis:7-alpine3.19
    container_name: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - data_redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      REDIS_PASSWORD: password
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '127.0.0.1:6379:6379'
    networks:
      - web_app_network
    restart: always

networks:
  web_app_network:
    driver: bridge

volumes:
  data_db:
  data_redis: